# Generated by Django 5.0.7 on 2025-06-28 20:45

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("movies", "0006_remove_genre_category_alter_genre_options_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Subtitle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language_code",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("es", "Spanish"),
                            ("fr", "French"),
                            ("de", "German"),
                            ("it", "Italian"),
                            ("pt", "Portuguese"),
                            ("ru", "Russian"),
                            ("ja", "Japanese"),
                            ("ko", "Korean"),
                            ("zh", "Chinese"),
                            ("ar", "Arabic"),
                            ("hi", "Hindi"),
                        ],
                        max_length=10,
                    ),
                ),
                ("language_name", models.CharField(max_length=50)),
                ("file", models.FileField(upload_to="subtitles/")),
                ("is_default", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["language_name"],
            },
        ),
        migrations.CreateModel(
            name="VideoFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="videos/")),
                ("url", models.URLField(blank=True, null=True)),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        blank=True, help_text="File size in bytes", null=True
                    ),
                ),
                (
                    "bitrate",
                    models.PositiveIntegerField(
                        blank=True, help_text="Bitrate in kbps", null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-quality__quality"],
            },
        ),
        migrations.CreateModel(
            name="VideoQuality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quality",
                    models.CharField(
                        choices=[
                            ("144p", "144p"),
                            ("240p", "240p"),
                            ("360p", "360p"),
                            ("480p", "480p"),
                            ("720p", "720p HD"),
                            ("1080p", "1080p Full HD"),
                            ("1440p", "1440p 2K"),
                            ("2160p", "2160p 4K"),
                        ],
                        max_length=10,
                        unique=True,
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=20)),
            ],
            options={
                "verbose_name_plural": "Video Qualities",
                "ordering": ["quality"],
            },
        ),
        migrations.RemoveField(
            model_name="episode",
            name="video_file",
        ),
        migrations.RemoveField(
            model_name="episode",
            name="video_url",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="video_file",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="video_url",
        ),
        migrations.AddField(
            model_name="episode",
            name="subtitles",
            field=models.ManyToManyField(
                blank=True, related_name="episodes", to="movies.subtitle"
            ),
        ),
        migrations.AddField(
            model_name="movie",
            name="subtitles",
            field=models.ManyToManyField(
                blank=True, related_name="movies", to="movies.subtitle"
            ),
        ),
        migrations.AddField(
            model_name="episode",
            name="video_files",
            field=models.ManyToManyField(
                blank=True, related_name="episodes", to="movies.videofile"
            ),
        ),
        migrations.AddField(
            model_name="movie",
            name="video_files",
            field=models.ManyToManyField(
                blank=True, related_name="movies", to="movies.videofile"
            ),
        ),
        migrations.AddField(
            model_name="videofile",
            name="quality",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="movies.videoquality"
            ),
        ),
        migrations.AddField(
            model_name="movie",
            name="default_quality",
            field=models.ForeignKey(
                blank=True,
                help_text="Default quality to play",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="movies.videoquality",
            ),
        ),
    ]
